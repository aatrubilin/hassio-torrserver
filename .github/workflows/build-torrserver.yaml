---
name: build-torrserver

#on:
#  release:
#    types: [published]

on: [push, pull_request]

jobs:
  # TS_VERSION_ASSETS=$(cat TS_VERSION)
  ##          echo "TS version latest: ${TS_VERSION_LATEST}"
  ##          echo "TS version assets: ${TS_VERSION_ASSETS}"
  ##          if [[ "$TS_VERSION_LATEST" != "$TS_VERSION_ASSETS" ]]; then
  ##            echo "Latest version is not equal version in assets"
  ##            echo "build_assets=true" >> "$GITHUB_OUTPUT"
  ##            echo "ts_version=${TS_VERSION_LATEST}" >> "$GITHUB_OUTPUT"
  ##          else
  ##            echo "Latest version is the same as in assets"
  ##            echo "build_assets=false" >> "$GITHUB_OUTPUT"
  ##          fi

  buildAssets:
    needs: [checkTSVersion]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0

      - name: Prepare envs
        working-directory: ./torrserver
        run: |
          VERSION=$(grep '^version: \w' config.yaml | sed 's/^.*: //')
          echo "Version: ${VERSION}"
          echo "VERSION=${VERSION}" >> "$GITHUB_OUTPUT"
          echo "VERSION_ADDON=$(echo $VERSION | cut -d "-" -f 1)" >> "$GITHUB_OUTPUT"
          echo "VERSION_TS=$(echo $VERSION | cut -d "-" -f 2)" >> "$GITHUB_OUTPUT"
          echo "VERSION_META=$(echo $VERSION | cut -d "-" -f 3)" >> "$GITHUB_OUTPUT"

      - name: Prepare source
        working-directory: ./torrserver/.build
        run: |
          rm -rf src
          echo "Clone TorrServer-${VERSION_TS}"
          git clone --depth 1 --branch $VERSION_TS https://github.com/YouROK/TorrServer.git src
          echo "Set relative path for staticfiles"
          jq -c '. + { "homepage": "./" }' ./src/web/package.json --indent 2 > ./src/web/package.$$.json
          mv ./src/web/package.$$.json ./src/web/package.json
#
#      - name: Set Node.js 16.x
#        uses: actions/setup-node@v4
#        with:
#          node-version: 16.x
#          cache: yarn
#          cache-dependency-path: ./torrserver/.build/TorrServer/web/package.json
#
#      - name: Build frontend
#        env:
#          REACT_APP_SERVER_HOST: "."  # Relative path for api endpoints
#        working-directory: ./torrserver/.build/TorrServer/web
#        run: |
#          yarn install
#          yarn run build

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2.1.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.2.1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.1.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3.3.0
        with:
          context: ./torrserver/.build
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ env.GITHUB_REPOSITORY }}:${{ env.VERSION }}
            ghcr.io/${{ env.GITHUB_REPOSITORY }}:latest
